pour tester les mails en local
    dans un terminal, lancer le programme :
    (--web 1080 le port pour lire les mails
    --smtp 1025 le port pour envoyer les mails
    --hide-extensions STARTTLS pour éviter une erreur SSL avec Synfony)
        maildev --web 1080 --smtp 1025 --hide-extensions STARTTLS
on peut maintenant y accéder depuis : http://localhost:1080/


pour tester les pages d'erreur en local :
    http://localhost:8086/_error/404





Needed for server :
    sudo apt-get install php7.4-xml





Entités :
    _ User :
        id
        email
        username
        roles
        password
        isVerified
        images oneToMany Image reversed by Image.postedBy

    _ ResetPasswordRequest :
        $id
        $user ManyToOne pour User

    _ Image :
        id
        slug
        name
        imageFile
        alt
        featuredForCategory OneToOne ? Category reversed by featuredImage
        featuredForMonster OneToOne ? Monster reversed by featuredImage
        postedBy ManyToOne ? User
        createdAt
        updatedAt (pour l'enregistrement via vichUploader)

    _ Movie :
        id
        slug
        name
        movieFile
        alt
        featuredForCategory OneToOne ? Category reversed by featuredMovie
        featuredForMonster OneToOne ? Monster reversed by featuredMovie
        postedBy ManyToOne ? User
        createdAt
        updatedAt

    _ Category :
        id
        name
        slug
        featuredImage ? OneToOne ? image reverted by featuredFor
        featuredMovie ? OneToOne ? movie reverted by featuredFor
        explanatoryText
        monsters OneToMany ? Monster.category

    _ Monster ? :
        id
        name
        slug
        nicknames (séparés par une ,) nullable
        gender nullable
        parents ManyToMany ? Monster nullable reverted by children ? alimenté pour voir l'arborescence ?
        children ManyToMany ? Monster nullable reverted by parents ?
        birthDay nullable
        arrivalDate nullable
        leavingDate nullable
        reasonForLeaving nullable
        explanatoryText wysiwyg ?(voir idées)
        featuredImage OneToOne ? image reverted by featuredFor
        featuredMovie ? OneToOne ? Movie nullable reverted by featuredFor
        images ManyToMany ? Image  non alimenté si father ou mother ?(possible ?)
        movies ManyToMany ? Movie nullable  non alimenté si father ou mother ?(possible ?)
        category ManyToOne ? Category reversed by Category.monters ?
        cossard ? int (par ex pour les parents de Max)






TODOS :
    _ refaire l'opération de demande de nouveau mot de passe et vérifier que la durée de validation d'une heure est correctement traduite !
    _ Virer les novalidate des templates de formulaires
    _ faire une page 404
        voir pour afficher un message supplémentaire
        par ex celui ci-dessous
    _ dans ResetPasswordController::reset()
        modifier le message pour la 404 si token === null
        pas certain en fait, car ici le user n'est pas passé par l'email
    _ dans RessetPasswordController::processSendingPasswordResetEmail()
        ceci : $mailer->send($email); devrait être dans un try catch
    _ si clic sur un vieux mail de demande de nouveau mot de passe :
        la deuxième partie du message d'erreur :
            Un problème est survenu pendant la requête de demande de nouveau mot de passe - The reset password link is invalid. Please try to reset your password again.
        ne semble pas être dans le projet (dans le bundle de symfonycasts ?)
        voir pour traduire le message ;)
            c'est dans ResetPasswordController::reset()






Idées :
    _ possibilité upload d'image avec attribution à plusieurs Monstre ?
    _ création d'un monstre :
        - possibilité d'enregistrer des images de plusieurs manières :
            - un bouton 'Ajouter une image' ouvre une pop-up contenant un formulaire de nouvelle image
            - un bouton 'Choisir une image' ouvre une pop-up contenant les images enregistrées
                ici un truc du genre vichUploader serait cool
        - possibilité d'en créer qui n'habite pas ici : donne la possibilité de créer les parents de Max par exemple
        - pour le texte explicatif :
            - soit un wysiwyg avec un template intégré
            - soit des champs supplémentaires :
                - taille et poids adulte
                - signes particuliers
                - ... ce qu'il aime/ n'aime pas, peurs ..
    _ page d'un monstre, plusieurs onglets :
        - infos principales + image vedette
        - texte explicatif
        - arbre généalogique (présent si renseigné)
        - galerie d'images et vidéos (si trop dur autre onglet)

(non vues) :
    _ création de catégorie ou de monstre, la featuredImage est obligatoire le featuredMovie ne l'est pas, mais sera pris en compte à la place de l'image si présent

Réponses :
    _ wysiwyg vide pour commencer







Faits :
        php bin/console make:user
modif du fichier pour ajouter $username

        php bin/console make:auth
modif de  App\Security\UserAuthenticator::onAuthenticationSuccess() pour rediriger vers la page d'accueil

        php bin/console make:registration-form
        composer require symfonycasts/verify-email-bundle
dans RegistrationController::register()
    modif du sujet de l'email de confirmation
dans RegistrationController::verifyUserEmail()
    - modif pour rediriger vers page d'accueil si email vérifié
    - il y a aussi l'envoi d'un message flash, donc modif template page d'accueil pour l'afficher
    - modif du formulaire d'enregistrement
    - modif des fichiers SecurityController, RegistrationFormType et register.html.twig

        php bin/console make:migration
        php bin/console doctrine:migrations:migrate
besoin d'un mail catcher, MailCatcher est cool mais il a besoin de ruby
    alors que MailDev s'installe via nodejs :
        npm install -g maildev
    modif du .env pour : MAILER_DSN=smtp://localhost:1025
    dans wamp, modif du fichier php.ini pour avoir :
        SMTP = localhost
        smtp_port = 1025
    (revoir en haut du fichier pour l'utilisation de maildev)

je veux que les users puissent modifier leur password

        composer require symfonycasts/reset-password-bundle
        php bin/console make:reset-password
        php bin/console make:migration
        php bin/console doctrine:migrations:migrate
    modif de ChangePasswordFormType.php
             ResetPasswordRequestFormType.php
    modif des 4 templates dans reset-password
    modif login.html.twig :
        - ajout d'un lien 'Mot de passe oublié'
        - traduction des textes et modif du formulaire
        - ajout affichage du flashMessage de réussite de modif de mot de passe (ResetPasswordCOntroller redirige vers app_login)
    modif de config/packages/translation.yaml pour avoir : default_locale: fr
        ainsi la durée d'utilisation du lien dans le mail de modif de mot de passe sera en fr

COMMIT ===> [User] entité, repo, migration, création de compte, modif de mdp, login et logout

COMMIT ===> [STYLE] création arborescence assets/styles + fichiers vides + création de 2 fichiers (home et security) via webpack encore + suppression app.css et son import dans app.js

je veux utiliser des slugs, des timestamps et charger des images

        composer require stof/doctrine-extensions-bundle
        composer require vich/uploader-bundle
    modif de config/packages/stof_doctrine_extensions.yam
    modif de config/services.yaml
    modif de config/packages\vich-uploader.yaml

        php bin/console make:entity
    => Image
    modif entité Image pour le slug, les timestamps et le chargement du fichier

        php bin/console make:migration
        php bin/console doctrine:migrations:migrate

COMMIT ===> [Image] création entité + repo + migration + ajout Gedmo et VichUploader

        php bin/console make:entity
    => Movie
    modif de config/services.yaml et de config/packages\vich-uploader.yaml pour ajouter le chemin d'upload des vidéos
    modif de l'entité Movie

        php bin/console make:migration
        php bin/console doctrine:migrations:migrate

COMMIT ===> [Movie] Création entité + repo + migration + ajout app.path.bestiaire_movies pour l'upload de vidéos

        php bin/console make:entity
    => Category
    modif de l'entité Category

        php bin/console make:migration
        php bin/console doctrine:migrations:migrate

COMMIT ===> [Category] Création entité + repo + migration

        php bin/console make:entity
    => Monster
    Modif de l'entité Monster

        php bin/console make:migration
        php bin/console doctrine:migrations:migrate

COMMIT ===> [Monster] Création entité + repo + migration

    Création et utilisation de /assets/styles/pages/_home.scss

COMMIT ===> [Style] Ajout feuille de style pour /home

        php bin/console make:Controller
    => AdminController
    Déplacement du controller dans /src/Controller/admin
    Création et utilisation de /assets/styles/pages/_admin.scss pour les pages /admin
    modif webpack config pour prise en compte du style

COMMIT ===> [APP] Création AdminController + template + style

    Ajout obligation d'être admin pour accéder à /admin dans /config/packages/secutity.yaml
Je veux utiliser des pages custom pour les erreurs type 40, 403 ou autres

        composer require symfony/twig-pack
    Création de config/routes/dev/framework.yaml
    J'y ajoute la route /_error pour pouvoir tester en dev les routes d'erreurs (ex : http://localhost:8000/_error/404)
    Création des templates error404 et error403 pour afficher ces erreurs
    Création des feuilles de style style-error.scss et pages/_error.scss
    modif webpack config pour prise en compte du style

COMMIT ===> [SECU] Ajout obligation ROLE_ADMIN pour accès pages /admin + pages custom error403 et Error 404 + style

    Création du fichier Admin/CategoryController.php et de la route /admin/categories
    ajout du block adminContent dans le template admin/base
    Création du template admin/category/create.html.twig

COMMIT ===> [PAGE] Création de la page d'ajout de nouvelle Category (controller + template)

    /config/packages/security.yaml :
        ajout hiérarchie des roles ROLE_CONTRIBUTOR, ROLE_ADMIN et ROLE_SUPER_ADMIN
        suppression de la règle d'accès à la route /admin

COMMIT ===> [SECU] création des roles contributor, admin et superAdmin + suppression de la règle d'accès aux routes /Admin

    Admin/CategoryController.php : ajout de la méthode edit() et de la route /admin/categories
    Création du template admin/category/edit.html.twig
je veux un voteur pour savoir si le user peut ajouter ou éditer une Category

        php bin/console make:voter
    => CategoryVoter
    modif du fichier src/Security/Voter/CategoryVoter.php
        ajout et gestion des permissions CATEGORY_CREATE et CATEGORY_EDIT
    Admin/CategoryController.php : ajout utilisation de denyAccessUnlessGranted() avec ces permissions

COMMIT ===> [Category] Création route /admin/category/edit + permission admin only via CategoryVoter + template + permission contributor sur route /admin/category/edit

        php bin/console make:voter
    => ImageVoter
    modif du fichier src/Security/Voter/CategoryVoter.php
        ajout et gestion des permissions IMAGE_CREATE et IMAGE_EDIT

COMMIT ==> [SECU] Création de ImageVoter : permissions IMAGE_CREATE et IMAGE_EDIT

    Correction CategoryVoter (légers prob variables)

COMMIT ==> [FIX] CategoryVoter : corrections variables

    Création de Admin/ImageController
    Ajout méthode create
        accès seulement si ROLE_CONTRIBUTOR
    création du template admin/image/create.html.twig

COMMIT ===> [IMAGE] Création de la route /admin/images/create + controller + permission + template

    entité Image : ajout de la propriété fileName
        c'est elle qui sera générée par vichUploader plutôt que name
        name sera renseignée par le contributeur
    vich_uploader.yaml : ajout utilisation de UniqidNamer pour Image et Movie

COMMIT ===> [IMAGE] Ajout propriété fileName générée par vichUploader + migration

    Ajout /public/uploads/ dans le gitignore

COMMIT ===> [GITIGNORE] Ajout de /public/uploads/

    Création de CreateImageFormType

COMMIT ===> [IMAGE] Création de CreateImageFormType

    Modif ImageController::create() pour enregistrer une nouvelle image
    Modif du template correspondant avec formulaire sans style

COMMIT ===> [IMAGE] La route /admin/images/create permet d'enregistrer une nouvelle Image

    Entité Movie : Ajout de la propriété fileName
        générée par vichUplaoder au lieu de name
        name sera renseignée par le contributeur

COMMIT ===> [Movie] Ajout propriété fileName générée par vichuploader + migration

    Création de MovieVoter, ajout des permissions MOVIE_CREATE et MOVIE_EDIT

COMMIT ===> [Movie] Création de MovieVoter et des permissions MOVIE_CREATE et MOVIE_EDIT

    Création de Admin/MovieController et le méthode create accessible selon permission
    Création du template movie/create.html.twig avec juste un titre

COMMIT ===> [MOVIE] Création de la route /admin/movies/create accessible avec permission (controller + template)

    Création de CreateMovieFormType

COMMIT ===> [MOVIE] Création de CreateMovieFormType

    Modif de Admin/MovieController::Create pour enregistrement d'une nouvelle vidéo
    Modif du template correspondant pour affichage du formulaire
    !!! BUG !!! ne fonctionne pas pour l'instant, le poids des vidéos est un réel problème ..

COMMIT ===> [BUG][MOVIE] Ajout enregistrement de nouvelle vidéo

    Modif des entités Image, Movie et Category :
        ajout prop permettant de savoir si une image ou une vidéo est déjà représentative d'une categorie
        pas eu besoin de migration pour cela car relation inverse OneToOne

COMMIT ===> [ENTITY] Image, Movie : ajout prop featuredForCategory en relation OneToOne inverse de Category.featuredImage et Category.featuredMovie

    Création de CreateCategoryFormType
    ajout de l'image représentative par choix parmi les images déjà uploadées
        mais seulement parmi celles qui ne sont pas déjà représentatives d'une autre catégorie

COMMIT ===> [Category] Création de CreateCategoryFormType

    Admin/CategoryController::create() : ajout gestion du formulaire de création de catégorie
    admin/category/create.html.twig : ajout du formulaire

COMMIT ===> [FEAT][Category] Ajout enregistrement de nouvelle catégorie

Je veux externaliser la gestion du formulaire de création d'image, y compris le template
    Admin/ImageController : ajout méthode new() qui gère maintenant le formulaire de création d'image
        cette méthode renvoie le rendu du formulaire
    création de admin/image/layouts/new.html.twig qui ne contient que le formulaire
    admin/image/create.html.twig : remplacement du formulaire par un appel à la méthode twig render(controller())
        qui pointe vers la nouvelle méthode ImageController::new()
    Je peux maintenant utiliser ce formulaire dans plusieurs pages
    et donc importer de nouvelles images en même temps que la création de Catégory ou de Monster

COMMIT ===> [IMAGE] Le formulaire de création d'image peut être utilisé dans n'importe quelle page

tips pour plus tard :
    _ template, affichage selon droit mini : ex :
        {% if is_granted("CATEGORY_EDIT") %}
            <a href="{{ path("admin_categories_edit", {id: category.id} }}">Modifier</a>
        {% endif %}
